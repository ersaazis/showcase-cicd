name: Admin Api

on:
  push:
    branches:
      - dev

env:
  REG_NAME: ghcr.io/ersaazis/
  REG_SERVICE: showcase-cicd
  REG_TAG: dev
  SERVICE_NAME: demo
  DOCKER_FILE: Dockerfile

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug Commit
        run: |
          echo "Commit SHA: ${{ github.head_ref }}.${{ github.sha }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Docker Image
        run: |
          echo "Building Docker image with service: $ECR_SERVICE tag: $ECR_TAG"
          docker build --no-cache -t $REG_NAME/$REG_SERVICE:$ECR_TAG -f $DOCKER_FILE .

      - name: Push Docker Image
        run: |
          docker push $REG_NAME/$REG_SERVICE:$ECR_TAG

  deploy-us:
    runs-on: self-hosted
    needs: build-image
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug Commit
        run: |
          echo "Commit SHA: ${{ github.head_ref }}.${{ github.sha }}"

      - name: Initial Project
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.DEMO_SSH_PRIVKEY }}
          host: ${{ secrets.DEMO_SSH_HOST }}
          port: ${{ secrets.DEMO_SSH_PORT }}
          username: ${{ secrets.DEMO_SSH_USER }}
          script: |
            mkdir -p ~/app-dev
            rm -rf ~/app-dev/*

      - name: Demo Project
        uses: appleboy/scp-action@master
        with:
          strip_components: 1
          key: ${{ secrets.DEMO_SSH_PRIVKEY }}
          host: ${{ secrets.DEMO_SSH_HOST }}
          port: ${{ secrets.DEMO_SSH_PORT }}
          username: ${{ secrets.DEMO_SSH_USER }}
          source: "./"
          target: "~/app-dev"

      - name: Run Docker Compose
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.DEMO_SSH_PRIVKEY }}
          host: ${{ secrets.DEMO_SSH_HOST }}
          port: ${{ secrets.DEMO_SSH_PORT }}
          username: ${{ secrets.DEMO_SSH_USER }}
          script: |
            docker compose -f ~/app-dev/ops/docker-compose.yml pull
            docker compose -f ~/app-dev/ops/docker-compose.yml -p demo-dev up -d --build --remove-orphans
            sudo /etc/init.d/nginx reload
